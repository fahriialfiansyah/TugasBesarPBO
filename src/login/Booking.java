package login;

import flight.Flights;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;

/**
 *
 * @author Acer
 */
public class Booking extends javax.swing.JFrame {

    int price, total, seats;

    /**
     * Creates new form Airline3
     */
    public Booking() {
        initComponents();
        f_price.setEnabled(false);
        f_totalprice.setEnabled(false);
        btn_logout.setEnabled(false);
        //initialize components same function as initComponents
        init();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel2 = new javax.swing.JPanel();
        btn_save = new javax.swing.JButton();
        btn_logout = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        f_seats = new javax.swing.JTextField();
        select_from = new javax.swing.JComboBox<>();
        select_to = new javax.swing.JComboBox<>();
        date_departure = new com.toedter.calendar.JDateChooser();
        f_price = new javax.swing.JTextField();
        f_totalprice = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(74, 31, 61));

        btn_save.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_save.setText("BOOK");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });

        btn_logout.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btn_logout.setForeground(new java.awt.Color(255, 0, 0));
        btn_logout.setText("LOG OUT");
        btn_logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_logoutMouseClicked(evt);
            }
        });
        btn_logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_logoutActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 255, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("TICKET BOOKING");
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel1.setBackground(new java.awt.Color(189, 79, 84));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Details..."));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("From:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel1.add(jLabel3, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("To:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel1.add(jLabel4, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Departure Date:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel1.add(jLabel5, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Number of Seats:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel1.add(jLabel6, gridBagConstraints);

        f_seats.setColumns(5);
        f_seats.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        f_seats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f_seatsActionPerformed(evt);
            }
        });
        f_seats.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                f_seatsKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 8;
        jPanel1.add(f_seats, gridBagConstraints);

        select_from.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        select_from.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[ SELECT ]", "Jakarta, Indonesia", "Bali, Indonesia", "Tokyo, Japan", "Beijing, China", "Seoul, South Korea", "Istanbul, Turkey", "Belgrade, Serbia" }));
        select_from.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select_fromActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 8;
        jPanel1.add(select_from, gridBagConstraints);

        select_to.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        select_to.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[ SELECT ]", "Jakarta, Indonesia", "Bali, Indonesia", "Tokyo, Japan", "Beijing, China", "Seoul, South Korea", "Istanbul, Turkey", "Belgrade, Serbia" }));
        select_to.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select_toActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 8;
        jPanel1.add(select_to, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 8;
        jPanel1.add(date_departure, gridBagConstraints);

        f_price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f_priceActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 8;
        jPanel1.add(f_price, gridBagConstraints);

        f_totalprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f_totalpriceActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 8;
        jPanel1.add(f_totalprice, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Price:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel1.add(jLabel8, gridBagConstraints);

        jLabel9.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Total Price:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel1.add(jLabel9, gridBagConstraints);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 29, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(93, 93, 93)
                        .addComponent(btn_logout, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_logout)
                        .addGap(14, 14, 14))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(24, Short.MAX_VALUE))))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-3, -2, 470, 410));

        setSize(new java.awt.Dimension(477, 441));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void select_fromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select_fromActionPerformed
        price();
    }//GEN-LAST:event_select_fromActionPerformed

    private void select_toActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select_toActionPerformed
        price();
    }//GEN-LAST:event_select_toActionPerformed

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        save();
    }//GEN-LAST:event_btn_saveActionPerformed

    private void f_seatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f_seatsActionPerformed
        price();
    }//GEN-LAST:event_f_seatsActionPerformed

    private void btn_logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_logoutMouseClicked

    }//GEN-LAST:event_btn_logoutMouseClicked

    private void btn_logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_logoutActionPerformed
        if(btn_logout.getModel().isArmed()){
            this.dispose();
            Login login = new Login();
            login.setVisible(true);
        }
    }//GEN-LAST:event_btn_logoutActionPerformed

    private void f_totalpriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f_totalpriceActionPerformed

    }//GEN-LAST:event_f_totalpriceActionPerformed

    private void f_seatsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_f_seatsKeyReleased
        int a, b, c;
        a = Integer.valueOf(f_price.getText());
        b = Integer.valueOf(f_seats.getText());
        c = a * b;
        f_totalprice.setText(Integer.toString(c));
    }//GEN-LAST:event_f_seatsKeyReleased

    private void f_priceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f_priceActionPerformed
        totalPrice();
    }//GEN-LAST:event_f_priceActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Booking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Booking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Booking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Booking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Booking().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_logout;
    private javax.swing.JButton btn_save;
    private com.toedter.calendar.JDateChooser date_departure;
    private javax.swing.JTextField f_price;
    private javax.swing.JTextField f_seats;
    private javax.swing.JTextField f_totalprice;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JComboBox<String> select_from;
    private javax.swing.JComboBox<String> select_to;
    // End of variables declaration//GEN-END:variables

    flight.Flights flights;

    //Initialize and declare components
    private void init() {
        flights = new Flights();
    }

    private void price() {
        if ((select_from.getSelectedItem().equals("Jakarta, Indonesia") && select_to.getSelectedItem().equals("Jakarta, Indonesia"))
                || (select_from.getSelectedItem().equals("Bali, Indonesia") && select_to.getSelectedItem().equals("Bali, Indonesia"))
                || (select_from.getSelectedItem().equals("Tokyo, Japan") && select_to.getSelectedItem().equals("Tokyo, Japan"))
                || (select_from.getSelectedItem().equals("Beijing, China") && select_to.getSelectedItem().equals("Beijing, China"))
                || (select_from.getSelectedItem().equals("Seoul, South Korea") && select_to.getSelectedItem().equals("Seoul, South Korea"))
                || (select_from.getSelectedItem().equals("Istanbul, Turkey") && select_to.getSelectedItem().equals("Istanbul, Turkey"))
                || (select_from.getSelectedItem().equals("Belgrade, Serbia") && select_to.getSelectedItem().equals("Belgrade, Serbia"))) {
            f_price.setText("");
            f_seats.setText("");
            f_totalprice.setText("");
            Flights.message("The destination cannot be the same as departure");
            select_from.setSelectedIndex(0);
            select_to.setSelectedIndex(0);
        } else if ((select_from.getSelectedItem().equals("Jakarta, Indonesia") && select_to.getSelectedItem().equals("Bali, Indonesia"))
                || (select_to.getSelectedItem().equals("Jakarta, Indonesia") && select_from.getSelectedItem().equals("Bali, Indonesia"))) {
            price = 612500;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        } else if ((select_from.getSelectedItem().equals("Jakarta, Indonesia") && select_to.getSelectedItem().equals("Tokyo, Japan"))
                || (select_to.getSelectedItem().equals("Jakarta, Indonesia") && select_from.getSelectedItem().equals("Tokyo, Japan"))) {
            price = 5495400;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        } else if ((select_from.getSelectedItem().equals("Jakarta, Indonesia") && select_to.getSelectedItem().equals("Beijing, China"))
                || (select_to.getSelectedItem().equals("Jakarta, Indonesia") && select_from.getSelectedItem().equals("Beijing, China"))) {
            price = 10269600;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        } else if ((select_from.getSelectedItem().equals("Jakarta, Indonesia") && select_to.getSelectedItem().equals("Seoul, South Korea"))
                || (select_to.getSelectedItem().equals("Jakarta, Indonesia") && select_from.getSelectedItem().equals("Seoul, South Korea"))) {
            price = 4125400;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        } else if ((select_from.getSelectedItem().equals("Jakarta, Indonesia") && select_to.getSelectedItem().equals("Istanbul, Turkey"))
                || (select_to.getSelectedItem().equals("Jakarta, Indonesia") && select_from.getSelectedItem().equals("Istanbul, Turkey"))) {
            price = 3025100;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        } else if ((select_from.getSelectedItem().equals("Jakarta, Indonesia") && select_to.getSelectedItem().equals("Belgrade, Serbia"))
                || (select_to.getSelectedItem().equals("Jakarta, Indonesia") && select_from.getSelectedItem().equals("Belgrade, Serbia"))) {
            price = 6848700;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        } else if ((select_from.getSelectedItem().equals("Bali, Indonesia") && select_to.getSelectedItem().equals("Tokyo, Japan"))
                || (select_to.getSelectedItem().equals("Bali, Indonesia") && select_from.getSelectedItem().equals("Tokyo, Japan"))) {
            price = 4445400;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        } else if ((select_from.getSelectedItem().equals("Bali, Indonesia") && select_to.getSelectedItem().equals("Beijing, China"))
                || (select_to.getSelectedItem().equals("Bali, Indonesia") && select_from.getSelectedItem().equals("Beijing, China"))) {
            price = 12029000;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        } else if ((select_from.getSelectedItem().equals("Bali, Indonesia") && select_to.getSelectedItem().equals("Seoul, South Korea"))
                || (select_to.getSelectedItem().equals("Bali, Indonesia") && select_from.getSelectedItem().equals("Seoul, South Korea"))) {
            price = 4405400;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        } else if ((select_from.getSelectedItem().equals("Bali, Indonesia") && select_to.getSelectedItem().equals("Istanbul, Turkey"))
                || (select_to.getSelectedItem().equals("Bali, Indonesia") && select_from.getSelectedItem().equals("Istanbul, Turkey"))) {
            price = 7295100;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        } else if ((select_from.getSelectedItem().equals("Bali, Indonesia") && select_to.getSelectedItem().equals("Belgrade, Serbia"))
                || (select_to.getSelectedItem().equals("Bali, Indonesia") && select_from.getSelectedItem().equals("Belgrade, Serbia"))) {
            price = 10061400;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        } else if ((select_from.getSelectedItem().equals("Tokyo, Japan") && select_to.getSelectedItem().equals("Beijing, China"))
                || (select_to.getSelectedItem().equals("Tokyo, Japan") && select_from.getSelectedItem().equals("Beijing, China"))) {
            price = 29165600;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        } else if ((select_from.getSelectedItem().equals("Tokyo, Japan") && select_to.getSelectedItem().equals("Seoul, South Korea"))
                || (select_to.getSelectedItem().equals("Tokyo, Japan") && select_from.getSelectedItem().equals("Seoul, South Korea"))) {
            price = 3648300;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        } else if ((select_from.getSelectedItem().equals("Tokyo, Japan") && select_to.getSelectedItem().equals("Istanbul, Turkey"))
                || (select_to.getSelectedItem().equals("Tokyo, Japan") && select_from.getSelectedItem().equals("Istanbul, Turkey"))) {
            price = 6541300;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        } else if ((select_from.getSelectedItem().equals("Tokyo, Japan") && select_to.getSelectedItem().equals("Belgrade, Serbia"))
                || (select_to.getSelectedItem().equals("Tokyo, Japan") && select_from.getSelectedItem().equals("Belgrade, Serbia"))) {
            price = 8193900;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        } else if ((select_from.getSelectedItem().equals("Beijing, China") && select_to.getSelectedItem().equals("Seoul, South Korea"))
                || (select_to.getSelectedItem().equals("Beijing, China") && select_from.getSelectedItem().equals("Seoul, South Korea"))) {
            price = 7004700;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        } else if ((select_from.getSelectedItem().equals("Beijing, China") && select_to.getSelectedItem().equals("Istanbul, Turkey"))
                || (select_to.getSelectedItem().equals("Beijing, China") && select_from.getSelectedItem().equals("Istanbul, Turkey"))) {
            price = 36249500;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        } else if ((select_from.getSelectedItem().equals("Beijing, China") && select_to.getSelectedItem().equals("Belgrade, Serbia"))
                || (select_to.getSelectedItem().equals("Beijing, China") && select_from.getSelectedItem().equals("Belgrade, Serbia"))) {
            price = 12991700;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        } else if ((select_from.getSelectedItem().equals("Seoul, South Korea") && select_to.getSelectedItem().equals("Istanbul, Turkey"))
                || (select_to.getSelectedItem().equals("Seoul, South Koreaa") && select_from.getSelectedItem().equals("Istanbul, Turkey"))) {
            price = 5445100;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        } else if ((select_from.getSelectedItem().equals("Seoul, South Korea") && select_to.getSelectedItem().equals("Belgrade, Serbia"))
                || (select_to.getSelectedItem().equals("Seoul, South Korea") && select_from.getSelectedItem().equals("Belgrade, Serbia"))) {
            price = 6869700;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        } else if ((select_from.getSelectedItem().equals("Istanbul, Turkey") && select_to.getSelectedItem().equals("Belgrade, Serbia"))
                || (select_to.getSelectedItem().equals("Istanbul, Turkey") && select_from.getSelectedItem().equals("Belgrade, Serbia"))) {
            price = 1507800;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        }
    }

    private void totalPrice() {
        price = Integer.parseInt(f_price.getText());
        seats = Integer.parseInt(f_seats.getText());
        total = price * seats;
        f_totalprice.setText(String.valueOf(total));
    }

    //clear function
    private void clear() {
        select_from.setSelectedIndex(0);
        select_to.setSelectedIndex(0);
        date_departure.setDate(null);
        f_price.setText("");
        f_seats.setText("");
        f_totalprice.setText("");
    }

    //insert flight data
    private void save() {
        String flightFrom = select_from.getSelectedItem().toString();
        String flightDest = select_to.getSelectedItem().toString();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String flightDate = sdf.format(date_departure.getDate());
        String price = f_price.getText().trim();
        String flightSeats = f_seats.getText().trim();
        String totalPrice = f_totalprice.getText().trim();
        //validate
        if (flightFrom.equals("[ Select ]")
                || flightDest.equals("[ Select ]")
                || flightDate.equals("")
                || flightSeats.equals("")) {
            Flights.message("Please fill all the fields!");
        } else {
            Object options[] = {"YES, Book now!", "NO, Not now!"};
            int x = JOptionPane.showOptionDialog(this, "Are you sure you want to booking (YES/NO)?", "Message",
                    JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, null);
            if (x == JOptionPane.YES_OPTION) {
                flights.setFlightFrom(flightFrom);
                flights.setFlightDest(flightDest);
                flights.setFlightDate(flightDate);
                flights.setPrice(price);
                flights.setFlightSeats(Integer.parseInt(f_seats.getText().trim()));
                flights.setTotalPrice(totalPrice);
                flights._insert();
                clear();
                btn_logout.setEnabled(true);
            }
        }
    }
}
