package airline;

import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import flight.DBConnection;
import flight.Flights;
import java.awt.Dimension;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import login.Login;

/**
 *
 * @author Acer
 */
public class Airline extends javax.swing.JFrame {
    int price, total, seats;

    public Airline() {
        initComponents();
        f_price.setEnabled(false);
        f_totalprice.setEnabled(false);
        //initialize components same function as initComponents
        init();
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btn_save = new javax.swing.JButton();
        btn_update = new javax.swing.JButton();
        btn_refresh = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();
        btn_logout = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        f_seats = new javax.swing.JTextField();
        select_from = new javax.swing.JComboBox<>();
        select_to = new javax.swing.JComboBox<>();
        date_departure = new com.toedter.calendar.JDateChooser();
        f_id = new javax.swing.JTextField();
        f_price = new javax.swing.JTextField();
        f_totalprice = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        f_search = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_list = new javax.swing.JTable();
        btn_back = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 255, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("AIRLINE MANAGEMENT SYSTEM");
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 398, 35));

        jPanel2.setBackground(new java.awt.Color(74, 31, 41));

        btn_save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/diskette.png"))); // NOI18N
        btn_save.setText("Save");
        btn_save.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_saveMouseClicked(evt);
            }
        });
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });

        btn_update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/pencil.png"))); // NOI18N
        btn_update.setText("Update");
        btn_update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_updateMouseClicked(evt);
            }
        });
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        btn_refresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/refresh.png"))); // NOI18N
        btn_refresh.setText("Refresh");
        btn_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refreshActionPerformed(evt);
            }
        });

        btn_delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/delete.png"))); // NOI18N
        btn_delete.setText("Delete");
        btn_delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_deleteMouseClicked(evt);
            }
        });
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        btn_clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/clear.png"))); // NOI18N
        btn_clear.setText("Clear");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });

        btn_logout.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_logout.setForeground(new java.awt.Color(255, 0, 0));
        btn_logout.setText("LOG OUT");
        btn_logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_logoutMouseClicked(evt);
            }
        });
        btn_logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_logoutActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(186, 79, 84));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Details..."));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ID:");
        jLabel2.setVisible(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel1.add(jLabel2, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("From:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel1.add(jLabel3, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("To:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel1.add(jLabel4, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Departure Date:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel1.add(jLabel5, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Number of Seats:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel1.add(jLabel6, gridBagConstraints);

        f_seats.setColumns(5);
        f_seats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f_seatsActionPerformed(evt);
            }
        });
        f_seats.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                f_seatsKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 8;
        jPanel1.add(f_seats, gridBagConstraints);

        select_from.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[ SELECT ]", "Jakarta, Indonesia", "Bali, Indonesia", "Tokyo, Japan", "Beijing, China", "Seoul, South Korea", "Istanbul, Turkey", "Belgrade, Serbia" }));
        select_from.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select_fromActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 8;
        jPanel1.add(select_from, gridBagConstraints);

        select_to.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[ SELECT ]", "Jakarta, Indonesia", "Bali, Indonesia", "Tokyo, Japan", "Beijing, China", "Seoul, South Korea", "Istanbul, Turkey", "Belgrade, Serbia" }));
        select_to.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select_toActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 8;
        jPanel1.add(select_to, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 8;
        jPanel1.add(date_departure, gridBagConstraints);

        f_id.setVisible(false);
        f_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f_idActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 180;
        gridBagConstraints.ipady = 7;
        jPanel1.add(f_id, gridBagConstraints);

        f_price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f_priceActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 8;
        jPanel1.add(f_price, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 8;
        jPanel1.add(f_totalprice, gridBagConstraints);

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Price:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel1.add(jLabel10, gridBagConstraints);

        jLabel11.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Total Price:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel1.add(jLabel11, gridBagConstraints);

        f_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                f_searchKeyPressed(evt);
            }
        });

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/search.png"))); // NOI18N
        jLabel9.setText("Search Flight From:");
        jLabel9.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        table_list.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        table_list.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table_list.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_listMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_list);

        btn_back.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_back.setForeground(new java.awt.Color(51, 0, 153));
        btn_back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/back.png"))); // NOI18N
        btn_back.setText("BACK");
        btn_back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_backMouseClicked(evt);
            }
        });
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(btn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(8, 8, 8)
                                        .addComponent(btn_update, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(8, 8, 8)
                                        .addComponent(btn_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(btn_refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(8, 8, 8)
                                        .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(8, 8, 8)
                                        .addComponent(btn_logout, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btn_back, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(f_search, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 636, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(52, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(f_search, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_back, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_update, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_logout, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1060, 520));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void select_fromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select_fromActionPerformed
        price();
    }//GEN-LAST:event_select_fromActionPerformed

    private void select_toActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select_toActionPerformed
        price();
    }//GEN-LAST:event_select_toActionPerformed

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        save();
        clear();
    }//GEN-LAST:event_btn_saveActionPerformed

    private void f_seatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f_seatsActionPerformed
        price();
    }//GEN-LAST:event_f_seatsActionPerformed

    private void table_listMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_listMouseClicked

    }//GEN-LAST:event_table_listMouseClicked

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        update();
    }//GEN-LAST:event_btn_updateActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        delete();
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refreshActionPerformed
        refresh();
    }//GEN-LAST:event_btn_refreshActionPerformed

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        clear();
    }//GEN-LAST:event_btn_clearActionPerformed

    private void btn_updateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_updateMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_updateMouseClicked

    private void f_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f_idActionPerformed
        tableListener();
        flights._loadID();
    }//GEN-LAST:event_f_idActionPerformed

    private void btn_logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_logoutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_logoutActionPerformed

    private void btn_saveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_saveMouseClicked
        String id = f_id.getText().trim();
        String flightFrom = select_from.getSelectedItem().toString();
        String flightDest = select_to.getSelectedItem().toString();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String flightDate = sdf.format(date_departure.getDate());
        String price = f_price.getText().trim();
        String flightSeats =f_seats.getText().trim();
        String totalPrice = f_totalprice.getText().trim();
        //validate
        if (id.equals("") 
                || flightFrom.equals("[ Select ]")
                || flightDest.equals("[ Select ]")
                || flightDate.equals(null)
                || price.equals("")
                || flightSeats.equals("") 
                || totalPrice.equals("")) {
            Flights.message("Please fill all the fields!");
        }
    }//GEN-LAST:event_btn_saveMouseClicked

    private void btn_logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_logoutMouseClicked
        this.dispose();
        Login login = new Login();
        login.setVisible(true);
    }//GEN-LAST:event_btn_logoutMouseClicked

    private void btn_deleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_deleteMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_deleteMouseClicked

    private void f_searchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_f_searchKeyPressed
        //allow function using enter key
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            search();
        }
    }//GEN-LAST:event_f_searchKeyPressed

    private void f_seatsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_f_seatsKeyReleased
        int a, b, c;
        a = Integer.valueOf(f_price.getText());
        b = Integer.valueOf(f_seats.getText());
        c = a*b;
        f_totalprice.setText(""+c);
    }//GEN-LAST:event_f_seatsKeyReleased

    private void f_priceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f_priceActionPerformed
        totalPrice();
    }//GEN-LAST:event_f_priceActionPerformed

    private void btn_backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_backMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_backMouseClicked

    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed
        this.dispose();
        AdminPage admin = new AdminPage();
        admin.setVisible(true);
    }//GEN-LAST:event_btn_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Airline.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Airline.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Airline.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Airline.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Airline().setVisible(true);
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_back;
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_logout;
    private javax.swing.JButton btn_refresh;
    private javax.swing.JButton btn_save;
    private javax.swing.JButton btn_update;
    private com.toedter.calendar.JDateChooser date_departure;
    private javax.swing.JTextField f_id;
    private javax.swing.JTextField f_price;
    private javax.swing.JTextField f_search;
    private javax.swing.JTextField f_seats;
    private javax.swing.JTextField f_totalprice;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> select_from;
    private javax.swing.JComboBox<String> select_to;
    private javax.swing.JTable table_list;
    // End of variables declaration//GEN-END:variables

    Flights flights;
    //store user ID
    private int _FLIGHTS_ID;
    
    //Initialize and declare components
    private void init() {
        flights = new Flights();
        centerFrame();
        tableHeader();
        //load list after the header
        loadFlights();
        //table listener
        tableListener();
    }

    
    //Center frame in screen
    private void centerFrame() {
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        Rectangle rec = this.getBounds();
        setLocation((dim.height - rec.height)/2, (dim.width - rec.width)/2);
    }
    
    //Default Table Model
    DefaultTableModel model = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int i, int i1) {
            return false; //cells not editable
        }
    };
    
    private void tableHeader() {
        table_list = new JTable(model);
        //Create Column Header
        String[] dataHeader = {"#", "USERID", "FLIGHT DATE", "FLIGHT FROM", "FLIGHT DESTINATION", "PRICE", "FLIGHT SEATS", "TOTAL PRICE"};
        setTableHeader(dataHeader, model);
        //Set row height
        table_list.setRowHeight(30);
        //Hide userid in index 1
        TableColumn hidden = table_list.getColumnModel().getColumn(1);
        //hidden
        hidden.setMinWidth(0);
        hidden.setPreferredWidth(0);
        hidden.setMaxWidth(0);
        String keySize[] = {"0:30","2:90","3:100","4:130","5:90","6:90","7:90"};
        keySizeCell(keySize);
        table_list.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        jScrollPane1.setViewportView(table_list);
    }
    
    //Setting table header
    private void setTableHeader(String[] data, DefaultTableModel _model) {
        for (String datel : data) {
            _model.addColumn(datel);
        }
    }
    
    private void keySizeCell(String[] length) {
        for (String length1 : length) {
            //separate values with : (val:value)
            String[] newString = length1.split(":");
            int col = Integer.parseInt(newString[0]);
            int size = Integer.parseInt(newString[1]);
            setColSize(table_list, col, size);
        }
    }
    
    //Setting colSize
    private void setColSize(JTable table, int col, int size) {
        table.getColumnModel().getColumn(col).setPreferredWidth(size);
        table.getColumnModel().getColumn(col).setMinWidth(size);
        table.getColumnModel().getColumn(col).setMaxWidth(size);
    }
    
    //clear function
    private void clear() {
        date_departure.setDate(null);
        select_from.setSelectedIndex(0);
        select_to.setSelectedIndex(0);
        f_price.setText("");
        f_seats.setText("");
        f_totalprice.setText("");
    }
     
    //insert flight data
    private void save() {
        String id = f_id.getText().trim();
        String flightFrom = select_from.getSelectedItem().toString();
        String flightDest = select_to.getSelectedItem().toString();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String flightDate = sdf.format(date_departure.getDate());
        String price = f_price.getText().trim();
        String flightSeats =f_seats.getText().trim();
        String totalPrice = f_totalprice.getText().trim();
        //validate
        if (flightDate.equals("")
                || flightFrom.equals("[ Select ]")
                || flightDest.equals("[ Select ]")
                || price.equals("")
                || flightSeats.equals("") 
                || totalPrice.equals("")) {
            Flights.message("Please fill all the fields!");
        } else {
            Object options[] = {"YES, Save now!", "NO, Not now!"};
            int x = JOptionPane.showOptionDialog(this, "Are you sure you want to save (YES/NO)?","Message",
                    JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE,null, options,null);
            if (x == JOptionPane.YES_OPTION) {
                flights.setFlightDate(flightDate);
                flights.setFlightFrom(flightFrom);
                flights.setFlightDest(flightDest);
                flights.setPrice(Integer.parseInt(f_price.getText().trim()));
                flights.setFlightSeats(Integer.parseInt(f_seats.getText().trim()));
                flights.setTotalPrice(Integer.parseInt(f_totalprice.getText().trim()));
                flights._insert();
                //reload list after save
                loadFlights();
            }
        }         
    }
    
    //update
    private void update() {
        String id = f_id.getText().trim();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String flightDate = sdf.format(date_departure.getDate());
        String flightFrom = select_from.getSelectedItem().toString();
        String flightDest = select_to.getSelectedItem().toString();
        String price = f_price.getText().trim();
        String flightSeats =f_seats.getText().trim();
        String totalPrice = f_totalprice.getText().trim();
        //validate
        if (flightDate.equals("")
                || flightFrom.equals("[ Select ]")
                || flightDest.equals("[ Select ]")
                || price.equals("")
                || flightSeats.equals("") 
                || totalPrice.equals("")) {
            Flights.message("Please fill all the fields!");
        } else {
            Object options[] = {"YES, Save Changes!", "NO, Not now!"};
            int x = JOptionPane.showOptionDialog(this, "Are you sure you want to save changes (YES/NO)?","Message",
                    JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE,null, options,null);
            if (x == JOptionPane.YES_OPTION) {
                flights.setFlightDate(flightDate);
                flights.setFlightFrom(flightFrom);
                flights.setFlightDest(flightDest);
                flights.setPrice(Integer.parseInt(f_price.getText().trim()));
                flights.setFlightSeats(Integer.parseInt(f_seats.getText().trim()));
                flights.setTotalPrice(Integer.parseInt(f_totalprice.getText().trim()));
                flights.setId(Integer.parseInt(id));
                flights._update();
                //reload list by flights
                _getFlightsData(_FLIGHTS_ID);
            }
        }         
    }
    
    //delete
    private void delete() {
        String flightFrom = select_from.getSelectedItem().toString();
        String flightDest = select_to.getSelectedItem().toString();
        
        //validate
        if (flightFrom.equals("")
                || flightDest.equals("")) {
            Flights.message("Please fill all the fields!");
        } else {
            Object options[] = {"YES, Delete Now!", "NO, Not now!"};
            int x = JOptionPane.showOptionDialog(this, "Are you sure you want to delete (YES/NO)?","Message",
                    JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE,null, options,null);
            if (x == JOptionPane.YES_OPTION) {
                flights._delete();
                clear();
                //reload list by flights
                loadFlights();
            } 
        }         
    }
    
    //load the list
    private void loadFlights() {
        //set row to 0
        model.setRowCount(0);
        //load flights
        flights._loadList();
        Vector array = flights.getData();
        //loop - vector data
        for(Object data : flights.getData()) {
            model.addRow((Vector) data);
        }
    }

    private void searchFlights(String key) {
        //set row to 0
        model.setRowCount(0);
        //load flights
        flights._search(key);
        //loop - vector data
        for (Object data : flights.getData()) {
            model.addRow((Vector) data);
        }
    }
    
    private void search() {
        String keySearch = f_search.getText().trim();
        if(keySearch.equals("")) {
            loadFlights();
        }else {
            searchFlights(keySearch);
        }   
    }
    
    //Table listener - get data to update and delete from a selected value in Table
    private void tableListener() {
        //when using mouse
        table_list.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent me) {
                //Only get the flight code in index 1
                int row = table_list.getSelectedRow();
                //check if not selected
                if (row != -1) {
                    //means selected 
                    int flightsId = Integer.parseInt(table_list.getModel().getValueAt(row, 1).toString());
                    //load to getFlights
                    _getFlightsData(flightsId);
                    
                    
                }
            }
        });
        table_list.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent ke) {
               //allow only arrow keys UP and DOWN
               if(ke.getKeyCode() == KeyEvent.VK_UP || ke.getKeyCode() == KeyEvent.VK_DOLLAR) {
                   int row = table_list.getSelectedRow();
                    //check if not selected
                    if (row != -1) {
                        //means selected
                        int flightsId = Integer.parseInt(table_list.getModel().getValueAt(row, 1).toString());
                        //load to getFlights
                        _getFlightsData(flightsId);
                    }
               }
            }  
        });
    }
    
    //get all the flights data
    private void _getFlightsData(int flightsId) {
        flights._getFlights(flightsId);
        //getters
        f_id.setText(Integer.toString(flights.getId()));
        int i = table_list.getSelectedRow();
        try {
            int srow = table_list.getSelectedRow();
            Date date = new SimpleDateFormat("yyyy-MM-dd").parse(flights.getFlightDate().toString());
            date_departure.setDate(date);
        }catch (ParseException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        select_from.setSelectedItem(flights.getFlightFrom().toString());
        select_to.setSelectedItem(flights.getFlightDest().toString());
        f_price.setText(Integer.toString(flights.getPrice()));
        f_seats.setText(Integer.toString(flights.getFlightSeats()));
        f_totalprice.setText(Integer.toString(flights.getTotalPrice()));
    }
    
    //refresh component and load new data
    private void refresh() {
        clear();
        loadFlights();
        _FLIGHTS_ID = 0;
    }
    
    private void price() {
        if((select_from.getSelectedItem().equals("Jakarta, Indonesia") && select_to.getSelectedItem().equals("Jakarta, Indonesia")) 
                || (select_from.getSelectedItem().equals("Bali, Indonesia") && select_to.getSelectedItem().equals("Bali, Indonesia"))
                || (select_from.getSelectedItem().equals("Tokyo, Japan") && select_to.getSelectedItem().equals("Tokyo, Japan"))
                || (select_from.getSelectedItem().equals("Beijing, China") && select_to.getSelectedItem().equals("Beijing, China"))
                || (select_from.getSelectedItem().equals("Seoul, South Korea") && select_to.getSelectedItem().equals("Seoul, South Korea"))
                || (select_from.getSelectedItem().equals("Istanbul, Turkey") && select_to.getSelectedItem().equals("Istanbul, Turkey"))
                || (select_from.getSelectedItem().equals("Belgrade, Serbia") && select_to.getSelectedItem().equals("Belgrade, Serbia"))){
            f_price.setText("");
            f_seats.setText("");
            f_totalprice.setText("");
            Flights.message("The destination cannot be the same as departure");
            select_from.setSelectedIndex(0);
            select_to.setSelectedIndex(0);
        }else if((select_from.getSelectedItem().equals("Jakarta, Indonesia") && select_to.getSelectedItem().equals("Bali, Indonesia")) 
                || (select_to.getSelectedItem().equals("Jakarta, Indonesia") && select_from.getSelectedItem().equals("Bali, Indonesia"))){
            price = 612500;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        }else if((select_from.getSelectedItem().equals("Jakarta, Indonesia") && select_to.getSelectedItem().equals("Tokyo, Japan")) 
                || (select_to.getSelectedItem().equals("Jakarta, Indonesia") && select_from.getSelectedItem().equals("Tokyo, Japan"))){
            price = 5495400;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        }else if((select_from.getSelectedItem().equals("Jakarta, Indonesia") && select_to.getSelectedItem().equals("Beijing, China"))
                || (select_to.getSelectedItem().equals("Jakarta, Indonesia") && select_from.getSelectedItem().equals("Beijing, China"))){
            price = 10269600;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        }else if((select_from.getSelectedItem().equals("Jakarta, Indonesia") && select_to.getSelectedItem().equals("Seoul, South Korea"))
                || (select_to.getSelectedItem().equals("Jakarta, Indonesia") && select_from.getSelectedItem().equals("Seoul, South Korea"))){
            price = 4125400;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        }else if((select_from.getSelectedItem().equals("Jakarta, Indonesia") && select_to.getSelectedItem().equals("Istanbul, Turkey"))
                || (select_to.getSelectedItem().equals("Jakarta, Indonesia") && select_from.getSelectedItem().equals("Istanbul, Turkey"))){
            price = 3025100;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        }else if((select_from.getSelectedItem().equals("Jakarta, Indonesia") && select_to.getSelectedItem().equals("Belgrade, Serbia"))
                || (select_to.getSelectedItem().equals("Jakarta, Indonesia") && select_from.getSelectedItem().equals("Belgrade, Serbia"))){
            price = 6848700;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        }else if((select_from.getSelectedItem().equals("Bali, Indonesia") && select_to.getSelectedItem().equals("Tokyo, Japan"))
                || (select_to.getSelectedItem().equals("Bali, Indonesia") && select_from.getSelectedItem().equals("Tokyo, Japan"))){
            price = 4445400;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        }else if((select_from.getSelectedItem().equals("Bali, Indonesia") && select_to.getSelectedItem().equals("Beijing, China"))
                || (select_to.getSelectedItem().equals("Bali, Indonesia") && select_from.getSelectedItem().equals("Beijing, China"))){
            price = 12029000;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        }else if((select_from.getSelectedItem().equals("Bali, Indonesia") && select_to.getSelectedItem().equals("Seoul, South Korea"))
                || (select_to.getSelectedItem().equals("Bali, Indonesia") && select_from.getSelectedItem().equals("Seoul, South Korea"))){
            price = 4405400;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        }else if((select_from.getSelectedItem().equals("Bali, Indonesia") && select_to.getSelectedItem().equals("Istanbul, Turkey"))
                || (select_to.getSelectedItem().equals("Bali, Indonesia") && select_from.getSelectedItem().equals("Istanbul, Turkey"))){
            price = 7295100;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        }else if((select_from.getSelectedItem().equals("Bali, Indonesia") && select_to.getSelectedItem().equals("Belgrade, Serbia"))
                || (select_to.getSelectedItem().equals("Bali, Indonesia") && select_from.getSelectedItem().equals("Belgrade, Serbia"))){
            price = 10061400;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        }else if((select_from.getSelectedItem().equals("Tokyo, Japan") && select_to.getSelectedItem().equals("Beijing, China"))
                || (select_to.getSelectedItem().equals("Tokyo, Japan") && select_from.getSelectedItem().equals("Beijing, China"))){
            price = 29165600;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        }else if((select_from.getSelectedItem().equals("Tokyo, Japan") && select_to.getSelectedItem().equals("Seoul, South Korea"))
                || (select_to.getSelectedItem().equals("Tokyo, Japan") && select_from.getSelectedItem().equals("Seoul, South Korea"))){
            price = 3648300;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        }else if((select_from.getSelectedItem().equals("Tokyo, Japan") && select_to.getSelectedItem().equals("Istanbul, Turkey"))
                || (select_to.getSelectedItem().equals("Tokyo, Japan") && select_from.getSelectedItem().equals("Istanbul, Turkey"))){
            price = 6541300;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        }else if((select_from.getSelectedItem().equals("Tokyo, Japan") && select_to.getSelectedItem().equals("Belgrade, Serbia"))
                || (select_to.getSelectedItem().equals("Tokyo, Japan") && select_from.getSelectedItem().equals("Belgrade, Serbia"))){
            price = 8193900;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        }else if((select_from.getSelectedItem().equals("Beijing, China") && select_to.getSelectedItem().equals("Seoul, South Korea"))
                || (select_to.getSelectedItem().equals("Beijing, China") && select_from.getSelectedItem().equals("Seoul, South Korea"))){
            price = 7004700;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        }else if((select_from.getSelectedItem().equals("Beijing, China") && select_to.getSelectedItem().equals("Istanbul, Turkey"))
                || (select_to.getSelectedItem().equals("Beijing, China") && select_from.getSelectedItem().equals("Istanbul, Turkey"))){
            price = 36249500;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        }else if((select_from.getSelectedItem().equals("Beijing, China") && select_to.getSelectedItem().equals("Belgrade, Serbia"))
                || (select_to.getSelectedItem().equals("Beijing, China") && select_from.getSelectedItem().equals("Belgrade, Serbia"))){
            price = 12991700;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        }else if((select_from.getSelectedItem().equals("Seoul, South Korea") && select_to.getSelectedItem().equals("Istanbul, Turkey"))
                || (select_to.getSelectedItem().equals("Seoul, South Koreaa") && select_from.getSelectedItem().equals("Istanbul, Turkey"))){
            price = 5445100;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        }else if((select_from.getSelectedItem().equals("Seoul, South Korea") && select_to.getSelectedItem().equals("Belgrade, Serbia"))
                || (select_to.getSelectedItem().equals("Seoul, South Korea") && select_from.getSelectedItem().equals("Belgrade, Serbia"))){
            price = 6869700;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        }else if((select_from.getSelectedItem().equals("Istanbul, Turkey") && select_to.getSelectedItem().equals("Belgrade, Serbia"))
                || (select_to.getSelectedItem().equals("Istanbul, Turkey") && select_from.getSelectedItem().equals("Belgrade, Serbia"))){
            price = 1507800;
            f_price.setText(String.valueOf(price));
            f_seats.setText("");
            f_totalprice.setText("");
        }
    }
    
    private void totalPrice() {
        price = Integer.parseInt(f_price.getText());
        seats = Integer.parseInt(f_seats.getText());
        total = price*seats;
        f_totalprice.setText(String.valueOf(total));
    }
}